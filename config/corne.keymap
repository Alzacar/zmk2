/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC    &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y    &kp U  &kp I         &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D         &kp F  &kp G        &kp H    &kp J  &kp K         &kp L    &kp SEMI  &kp DELETE
&kp LSHFT  &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N    &kp M  &kp COMMA     &kp DOT  &kp FSLH  &kp TAB
                         &kp LEFT_ALT  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp LEFT_GUI
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp CAPSLOCK    &kp UP    &trans        &trans  &kp C_MUTE      &kp KP_MULTIPLY  &kp KP_N7  &kp KP_N8        &kp KP_N9  &kp KP_PLUS   &trans
&trans  &kp LEFT        &kp DOWN  &kp RIGHT     &trans  &kp C_VOL_UP    &kp KP_DIVIDE    &kp KP_N4  &kp KP_N5        &kp KP_N6  &kp KP_MINUS  &trans
&trans  &kp KP_NUMLOCK  &trans    &trans        &trans  &kp C_VOL_DN    &kp KP_COMMA     &kp KP_N1  &kp KP_N2        &kp KP_N3  &kp KP_DOT    &kp EQUAL
                                  &kp LEFT_ALT  &trans  &kp SPACE       &kp RET          &mo 3      &kp KP_NUMBER_0
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N0  &kp NUMBER_4  &kp NUMBER_2  &kp N7  &trans       &kp RA(N0)    &kp RA(NUMBER_3)  &kp NUMBER_1       &kp N5      &kp MINUS         &trans
&trans  &trans  &kp NUMBER_3  &kp RA(E)     &trans  &trans       &kp NUMBER_6  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp RA(N5)  &kp RA(MINUS)     &trans
&trans  &trans  &trans        &kp N9        &trans  &trans       &kp N8        &kp SINGLE_QUOTE  &kp NUHS           &kp RA(N8)  &kp RA(NUMBER_2)  &trans
                              &trans        &mo 3   &kp SPACE    &kp RET       &trans            &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &bt BT_CLR_ALL    &bt BT_SEL 0  &trans  &kp PSCRN  &kp SCROLLLOCK  &kp PAUSE_BREAK  &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &bt BT_CLR        &bt BT_SEL 1  &trans  &kp INS    &kp HOME        &kp PAGE_UP      &trans
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans            &bt BT_SEL 3  &trans  &kp DEL    &kp END         &kp PAGE_DOWN    &trans
                         &trans   &trans   &trans            &trans        &trans  &trans
            >;
        };
    };
};
